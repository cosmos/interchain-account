syntax = "proto3";
package intertx;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/cosmos/interchain-accounts/x/inter-tx/types";

import "gogoproto/gogo.proto";

import "ibc/core/client/v1/client.proto";
import "cosmos/base/v1beta1/coin.proto";

service Msg {
  rpc Register(MsgRegisterAccount) returns (MsgRegisterAccountResponse);
  rpc Send(MsgSend) returns (MsgSendResponse);
}

//MsgRegisterAccount is used to register an interchain account on a target chain 
message MsgRegisterAccount {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string owner = 1;
  string connectionId = 2;
}

message MsgRegisterAccountResponse {}

// MsgSend is used to send coins from an interchain account to another account on the same chain
message MsgSend {
  bytes   sender                    = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  bytes   to_address                      = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  repeated cosmos.base.v1beta1.Coin amount = 3
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  string  connectionId = 4;
}

// MsgSendResponse defines the Msg/Send response type.
message MsgSendResponse {}

